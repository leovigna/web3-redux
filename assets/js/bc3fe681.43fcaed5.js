"use strict";(self.webpackChunk_owlprotocol_web3_redux_docs=self.webpackChunk_owlprotocol_web3_redux_docs||[]).push([[6042],{9613:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return b}});var n=r(9496);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=u(r),b=o,f=d["".concat(s,".").concat(b)]||d[b]||p[b]||c;return r?n.createElement(f,a(a({ref:t},l),{},{components:r})):n.createElement(f,a({ref:t},l))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,a=new Array(c);a[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var u=2;u<c;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},527:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return l},default:function(){return d}});var n=r(7813),o=r(7044),c=(r(9496),r(9613)),a=["components"],i={},s=void 0,u={unversionedId:"web3-redux-advanced/block_subscribe",id:"web3-redux-advanced/block_subscribe",title:"block_subscribe",description:"Block subscription",source:"@site/docs/web3-redux-advanced/block_subscribe.md",sourceDirName:"web3-redux-advanced",slug:"/web3-redux-advanced/block_subscribe",permalink:"/docs/web3-redux-advanced/block_subscribe",editUrl:"https://github.com/owlprotocol/web3-redux/tree/master/docusaurus/docs/web3-redux-advanced/block_subscribe.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"architecture",permalink:"/docs/web3-redux-advanced/architecture"},next:{title:"multichsin",permalink:"/docs/web3-redux-advanced/multichsin"}},l=[{value:"Block subscription",id:"block-subscription",children:[],level:3}],p={toc:l};function d(e){var t=e.components,r=(0,o.Z)(e,a);return(0,c.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h3",{id:"block-subscription"},"Block subscription"),(0,c.kt)("p",null,"To sync with on-chain events, it's a good idea to start a block subscription as it can be used as a reference point to keep data fresh. This is recommended but not required as some apps might use a different refresh mechanism.\nThe ",(0,c.kt)("inlineCode",{parentName:"p"},"web3-redux")," block subscription hook is configured to automatically start/stop the correct subscription if the ",(0,c.kt)("inlineCode",{parentName:"p"},"networkId")," parameter changes. Alternatively, you can use the ",(0,c.kt)("inlineCode",{parentName:"p"},"subscribe()/unsubscribe()")," handlers for more granular control such as handling user interactions."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-typescript"},"//Blocks.tsx\nimport { Block } from '@leovigna/web3-redux';\nconst BlocksComponent = ({ networkId }) => {\n    const [blocks, { subscribe, unsubsribe }] = Block.useBlockSync(networkId);\n};\n")),(0,c.kt)("p",null,"Alternatively, if not using hooks or React in general, you can manually dispatch a block sync action and use the selector as follows:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Block, Network } from '@leovigna/web3-redux';\nstore.dispatch(Block.subscribe({ networkId: '1' }));\nconst blocks = Network.selectBlocks(store.getState());\n")))}d.isMDXComponent=!0}}]);