"use strict";(self.webpackChunk_owlprotocol_web3_redux_docs=self.webpackChunk_owlprotocol_web3_redux_docs||[]).push([[7080],{9613:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7262:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var r=n(7813),o=n(7044),a=(n(9496),n(9613)),i=["components"],l={sidebar_position:7},s="Contributing",c={unversionedId:"contributing",id:"contributing",title:"Contributing",description:"Project Management",source:"@site/docs/contributing.md",sourceDirName:".",slug:"/contributing",permalink:"/docs/contributing",editUrl:"https://github.com/owlprotocol/web3-redux/tree/master/docusaurus/docs/contributing.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"sync_middleware",permalink:"/docs/web3-redux-advanced/sync_middleware"},next:{title:"Exports",permalink:"/docs/web3-redux-reference/"}},u=[{value:"Project Management",id:"project-management",children:[],level:2},{value:"Project Setup",id:"project-setup",children:[{value:"Build",id:"build",children:[],level:3},{value:"Test",id:"test",children:[],level:3},{value:"Project Layout",id:"project-layout",children:[],level:3}],level:2}],d={toc:u};function p(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"contributing"},"Contributing"),(0,a.kt)("h2",{id:"project-management"},"Project Management"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"web3-redux")," was originally created by ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/leovigna"},"@leovigna")," and is now actively maintained by Owl Protocol as a library used in all of our DApps. The library is MIT licensed and anyone is free to contribute."),(0,a.kt)("p",null,"Before you do we recommend the following:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Read through the docs and reference"),(0,a.kt)("li",{parentName:"ul"},"Integrate ",(0,a.kt)("inlineCode",{parentName:"li"},"web3-redux")," into one of your DApps"),(0,a.kt)("li",{parentName:"ul"},"Fork the repo and run the test suite (some tests might fail due to missing API keys)")),(0,a.kt)("p",null,"If you'd like to contribute:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Look for an existing issue, and comment if interested in researching/implementing"),(0,a.kt)("li",{parentName:"ul"},"Create a new issue for feature requests/bugs")),(0,a.kt)("p",null,"Current areas of research include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Debugging & Error Handling middleware"),(0,a.kt)("li",{parentName:"ul"},"Test coverage & Additional Continuous Integration"),(0,a.kt)("li",{parentName:"ul"},"Additional documentation & guides"),(0,a.kt)("li",{parentName:"ul"},"Web3 RPC Optimizations (Multicall Contract, HTTP Batching)"),(0,a.kt)("li",{parentName:"ul"},"Indexing integrations (Etherscan)"),(0,a.kt)("li",{parentName:"ul"},"Non-EVM blockchains (eg. Solana, Cardano)"),(0,a.kt)("li",{parentName:"ul"},'Pre-configured "meta-hooks" for common interfaces',(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"ERC165, ERC20, ERC721, ERC1155 already implemented"))),(0,a.kt)("li",{parentName:"ul"},"Pre-built React components (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/owlprotocol/web3-components"},"web3-redux-components"),")")),(0,a.kt)("h2",{id:"project-setup"},"Project Setup"),(0,a.kt)("h3",{id:"build"},"Build"),(0,a.kt)("p",null,"The project is built in Typescript and needs to be transpiled to JS. When developing we recommend building in watch mode which you can do using the command below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm run build:watch\n")),(0,a.kt)("h3",{id:"test"},"Test"),(0,a.kt)("p",null,"We use the following libraries for testing:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://mochajs.org/"},"mocha")," As a testing framework. Our ",(0,a.kt)("inlineCode",{parentName:"li"},".mocharc.json")," file is configured to run tests in parallel on 8 processes."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.chaijs.com/"},"chai")," As an test assertion library")),(0,a.kt)("p",null,"Common actions in the ",(0,a.kt)("inlineCode",{parentName:"p"},"before()")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"beforeEach()")," step of test suites include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Setting up the store"),(0,a.kt)("li",{parentName:"ul"},"Dispatching actions to the store to populate with test data (eg. Configure Network)"),(0,a.kt)("li",{parentName:"ul"},"Setting up a ",(0,a.kt)("inlineCode",{parentName:"li"},"ganache-core")," test Web3 provider (test blockchain)"),(0,a.kt)("li",{parentName:"ul"},"Deploying test smart contracts (eg. Deploy ERC20 contract)")),(0,a.kt)("p",null,"When running tests we recommend the following best practices:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Run individual test files with ",(0,a.kt)("inlineCode",{parentName:"li"},"mocha lib/<path-to-file>")),(0,a.kt)("li",{parentName:"ul"},"Run tests with event logging middleware ",(0,a.kt)("inlineCode",{parentName:"li"},"LOG_REDUX_ACTIONS=1 mocha lib/<path-to-file>")),(0,a.kt)("li",{parentName:"ul"},"If a test files contains many unit tests consider temporarily skipping sum by refactoring them to use ",(0,a.kt)("inlineCode",{parentName:"li"},"it.skip('MyTest, () => ...)"),". Mocha will the test description but won't execute the test.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Testing Hooks"),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"web3-redux")," supports React hooks to simplify integration with React components. These are ",(0,a.kt)("strong",{parentName:"p"},"NOT")," required however, and other non-React projects can still integrate all of the other Redux-based features for state management (actions, sagas, selectors).\nTesting React Hooks requires introducing additional libraries to simulate the DOM and how hooks update:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/rstacruz/mocha-jsdom"},"mocha-jsdom")," to quickly configure JSDOM with Mocha."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://react-hooks-testing-library.com/"},"@testing-library/react-hooks")," to test render hooks")),(0,a.kt)("h3",{id:"project-layout"},"Project Layout"),(0,a.kt)("p",null,"This section aims to discuss the layout of the ",(0,a.kt)("inlineCode",{parentName:"p"},"web3-redux")," project for potential contributors or developers looking to debug the library by looking at the source code."),(0,a.kt)("p",null,"At the top level of our ",(0,a.kt)("inlineCode",{parentName:"p"},"src/")," folder we have the following directory structure. You'll notice these are mostly organized by data model, where each folder contains all the logic to process a specific type of blockchain data or API data."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"\ud83d\udce6src\n \u2523 \ud83d\udcc24byte #4byte.directory API store sha-256 pre-images for events/function calls\n \u2523 \ud83d\udcc2abis  #Artifacts for test contracts and hooks (ERC20,ERC721,ERC1155,ERC165)\n \u2523 \ud83d\udcc2block  #Ethereum Block\n \u2523 \ud83d\udcc2config #Global config object to store configs (current account, IPFS url)\n \u2523 \ud83d\udcc2contract #Smart Contract or Externally Owned Account with an Ethereum address\n \u2523 \ud83d\udcc2contractevent #Smart Contract event log\n \u2523 \ud83d\udcc2contracteventindex #Custom index for events\n \u2523 \ud83d\udcc2ethcall #Ethereum Call\n \u2523 \ud83d\udcc2ipfs #IPFS read/write\n \u2523 \ud83d\udcc2network #Network config, store web3 instance for different EVM networks indexed by network id\n \u2523 \ud83d\udcc2sync #Dynamic Sync middleware. Quickly add logic to dispatch actions if a new Block/Event/Transaction matching filter parameters is detected.\n \u2523 \ud83d\udcc2test #Test data\n \u2523 \ud83d\udcc2transaction #Ethereum Transaction\n \u2523 \ud83d\udcc2types #Typescript type annotations for JS libraries/Solidity smart contracts\n \u2523 \ud83d\udcc2utils #Utility functions for testing and parsing data\n \u2523 \ud83d\udcdcenvironment.ts #Environment variables and their defaults\n \u2523 \ud83d\udcdcindex.ts #Root export all modules\n \u2523 \ud83d\udcdcorm.ts #Configure redux-orm instance with all models\n \u2523 \ud83d\udcdcreducer.ts #Root reducer, dispatches reducer actions to corresponding model reducers\n \u2523 \ud83d\udcdcsaga.ts #Root saga, spawns model root sagas\n \u2523 \ud83d\udcdcstate.ts #redux-orm state interface, used for certain tests and give a high-level overview of the Redux store since redux-orm does not have tyypes\n \u2523 \ud83d\udcdcstore.ts #default redux store and redux store factory functions, compose with custom reducers to integrate web3-redux to existing store\n \u2517 \ud83d\udcdctransform.ts #redux-persit transform function used to strip out non-serializable items from the state before encoding to storage\n")),(0,a.kt)("p",null,"Most of the model directories (block, transaction, contract...) then have the following structure:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"\ud83d\udce6model\n \u2523 \ud83d\udcc2actions #Redux actions defining CRUD actions (eg. CREATE) and async saga actions (eg. FETCH)\n \u2523 \ud83d\udcc2hooks #React hooks to help integrate frontend components. Combines selectors & actions to read data and dispatch network request actions.\n \u2523 \ud83d\udcc2middleware #Redux middleware to synchronously dispatch additional actions before/after an action is received\n \u2523 \ud83d\udcc2model #Define the model interface and any other utilities such as validation\n \u2523 \ud83d\udcc2sagas #Process async actions such as network requests using redux-saga\n \u2517 \ud83d\udcc2selectors #These parse out the state to select one or multiple instances of the data\n")))}p.isMDXComponent=!0}}]);