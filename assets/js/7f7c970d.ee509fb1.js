"use strict";(self.webpackChunk_owlprotocol_web3_redux_docs=self.webpackChunk_owlprotocol_web3_redux_docs||[]).push([[8566],{9613:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(9496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=l(r),f=a,h=p["".concat(u,".").concat(f)]||p[f]||d[f]||o;return r?n.createElement(h,c(c({ref:t},s),{},{components:r})):n.createElement(h,c({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},6339:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return s},default:function(){return p}});var n=r(7813),a=r(7044),o=(r(9496),r(9613)),c=["components"],i={},u=void 0,l={unversionedId:"web3-redux-advanced/architecture",id:"web3-redux-advanced/architecture",title:"architecture",description:"Architecture",source:"@site/docs/web3-redux-advanced/architecture.md",sourceDirName:"web3-redux-advanced",slug:"/web3-redux-advanced/architecture",permalink:"/docs/web3-redux-advanced/architecture",editUrl:"https://github.com/owlprotocol/web3-redux/tree/master/docusaurus/docs/web3-redux-advanced/architecture.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Initialize the Redux Store",permalink:"/docs/web3-redux-advanced/custom_store"},next:{title:"block_subscribe",permalink:"/docs/web3-redux-advanced/block_subscribe"}},s=[{value:"Architecture",id:"architecture",children:[],level:2}],d={toc:s};function p(e){var t=e.components,i=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"architecture"},"Architecture"),(0,o.kt)("p",null,"Overview of the overall architecture of the library."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Flowchart.svg",src:r(1211).Z,width:"1480",height:"1167"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"All web3-redux data is stored under the ",(0,o.kt)("inlineCode",{parentName:"li"},"web3Redux")," slice of the store as a normalized json store (State). The overall interface of the state can be found under ",(0,o.kt)("a",{parentName:"li",href:"/docs/web3-redux-reference/interfaces/State"},"State"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/reduxjs/reselect"},"Selectors")," for each ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/redux-orm/redux-orm"},"redux-orm")," model are the preferred way to then read this data."),(0,o.kt)("li",{parentName:"ul"},"Redux ORM models are meant to represent blockchain data such as ",(0,o.kt)("a",{parentName:"li",href:"/docs/web3-redux-reference/interfaces/Block.BlockHeader"},"Block"),", ",(0,o.kt)("a",{parentName:"li",href:"/docs/web3-redux-reference/interfaces/Transaction.Transaction-1"},"Transaction"),", ",(0,o.kt)("a",{parentName:"li",href:"/docs/web3-redux-reference/interfaces/Contract.Contract-1"},"Contract")),(0,o.kt)("li",{parentName:"ul"},"State is mutated by the dispatching of Actions. Actions can be synchronous, for simple CRUD operations on the state, or asynchronous, for network fetch operations. Async actions are handled by ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/redux-saga/redux-saga"},"redux-saga")," and will usually dispatched a new CRUD action after fetching data."),(0,o.kt)("li",{parentName:"ul"},"Hooks such as ",(0,o.kt)("inlineCode",{parentName:"li"},"useDispatch")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"useSelector"),", enable Redux components to use the React Context API to read/write to the store by combinding selectors and actions.")))}p.isMDXComponent=!0},1211:function(e,t,r){t.Z=r.p+"assets/images/web3-redux-flowchart-fc49816fc0ddbb6a78b775f22285b4e8.svg"}}]);