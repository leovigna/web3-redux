"use strict";(globalThis.webpackChunk_owlprotocol_web3_redux_docs=globalThis.webpackChunk_owlprotocol_web3_redux_docs||[]).push([[5280],{7522:(e,t,r)=>{r.d(t,{Zo:()=>i,kt:()=>k});var a=r(9901);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),u=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},i=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),p=u(r),k=n,b=p["".concat(l,".").concat(k)]||p[k]||d[k]||o;return r?a.createElement(b,s(s({ref:t},i),{},{components:r})):a.createElement(b,s({ref:t},i))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,s[1]=c;for(var u=2;u<o;u++)s[u]=r[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8413:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var a=r(2875),n=(r(9901),r(7522));const o={sidebar_position:0},s="Hooks",c={unversionedId:"web3-redux-hooks/index",id:"web3-redux-hooks/index",title:"Hooks",description:"To easily read/sync data, we recommend using the built-in hooks when possible to automatically combine selectors & action dispatchers.",source:"@site/docs/web3-redux-hooks/index.md",sourceDirName:"web3-redux-hooks",slug:"/web3-redux-hooks/",permalink:"/web3-redux/docs/web3-redux-hooks/",draft:!1,editUrl:"https://github.com/owlprotocol/web3-redux/tree/master/docusaurus/docs/web3-redux-hooks/index.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Conclusion",permalink:"/web3-redux/docs/web3-redux-quickstart/conclusion"},next:{title:"useContractCall",permalink:"/web3-redux/docs/web3-redux-hooks/Contract/useContractCall"}},l={},u=[{value:"Contract",id:"contract",level:2},{value:"General Info",id:"general-info",level:3},{value:"Smart Contract Data",id:"smart-contract-data",level:3},{value:"Pre-configured Interfaces",id:"pre-configured-interfaces",level:3},{value:"Etherscan API",id:"etherscan-api",level:3},{value:"Block",id:"block",level:2},{value:"Transaction",id:"transaction",level:2},{value:"Contract Event",id:"contract-event",level:2},{value:"IPFS",id:"ipfs",level:2}],i={toc:u};function d({components:e,...t}){return(0,n.kt)("wrapper",(0,a.Z)({},i,t,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"hooks"},"Hooks"),(0,n.kt)("p",null,"To easily read/sync data, we recommend using the built-in hooks when possible to automatically combine selectors & action dispatchers."),(0,n.kt)("h2",{id:"contract"},"Contract"),(0,n.kt)("p",null,"These hooks are for both Smart Contracts and Externally Owned Accounts."),(0,n.kt)("h3",{id:"general-info"},"General Info"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/Contract/useGetBalance"},"useGetBalance"),": Get balance of address."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/Contract/useGetNonce"},"useGetNonce"),": Get nonce (tx count) of address."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/Contract/useGetCode"},"useGetCode"),": Get code at address. ",(0,n.kt)("inlineCode",{parentName:"li"},"0x")," indicates an EOA.")),(0,n.kt)("h3",{id:"smart-contract-data"},"Smart Contract Data"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/Contract/useContractCall"},"useContractCall"),": Make a contract call."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/Contract/useEvents"},"useEvents"),": Get past or sync contract event logs.")),(0,n.kt)("h3",{id:"pre-configured-interfaces"},"Pre-configured Interfaces"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/ERC20/useERC20"},"useERC20"),": Popular token standard."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/ERC721/useERC721"},"useERC721"),": Popular NFT standard."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/ERC1155/useERC1155"},"useERC1155"),": Popular Multi-Token standard."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/ERC165/useERC165"},"useERC165"),": Introspection standard to check if a contract supports an interface.")),(0,n.kt)("h3",{id:"etherscan-api"},"Etherscan API"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/Contract/useFetchAbi"},"useFetchAbi"),": Fetch contract ABI using Etherscan API."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/Transaction/useFetchTransactions"},"useFetchTransactions"),": Fetch transactions for address using Etherscan API.")),(0,n.kt)("h2",{id:"block"},"Block"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/Block/useBlock"},"useBlock"),": Fetch specific block by number or blockHash."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/Block/useLatestBlock"},"useLatestBlock"),": Fetch latest block for network."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/Block/useBlockSync"},"useBlockSync"),": Subscribe to new blocks.")),(0,n.kt)("h2",{id:"transaction"},"Transaction"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/Transaction/useTransaction"},"useTransaction"),": Fetch specific transaction by hash.")),(0,n.kt)("h2",{id:"contract-event"},"Contract Event"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/Event/useGetPastLogs"},"useGetPastLogs"),": Fetch past logs using raw subscribe filter. Enables syncing event across multiple smart contracts efficiently."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/Event/useGetAssets"},"useGetAssets"),": Fetch all tokenized assets for address.")),(0,n.kt)("h2",{id:"ipfs"},"IPFS"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/web3-redux/docs/web3-redux-hooks/IPFS#useIpfs"},"useIpfs"),": Fetch IPFS resource using content hash.")))}d.isMDXComponent=!0}}]);